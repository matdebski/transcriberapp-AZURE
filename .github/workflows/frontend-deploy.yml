name: Deploy Azure Functions and Frontend

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # - name: "Resolve Project Dependencies Using Pip"
      #   shell: bash
      #   run: |
      #     pushd "backend/UploadFunction"
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt --target=".python_packages/lib/site-packages"
      #     popd

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Azure Functions Core Tools
        run: |
          npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Publish UploadFunction using Azure Functions Core Tools
        run: |
          func azure functionapp publish upload-transcriber --python --build remote
        working-directory: backend/UploadFunction

      - name: Publish ProcessingFunction using Azure Functions Core Tools
        run: |
          func azure functionapp publish processing-transcriber --python --build remote
        working-directory: backend/ProcessingFunction

      # - name: "Run the Azure Functions action"
      #   uses: Azure/functions-action@v1
      #   id: deploy-to-function-app
      #   with:
      #     app-name: upload-transcriber
      #     package: backend/UploadFunction
      #     scm-do-build-during-deployment: true
      #     enable-oryx-build: true

      - name: Get upload_function URL
        id: get-func-url
        run: |
          url=$(az functionapp show \
            --resource-group rg-transcriber \
            --name upload-transcriber \
            --query "defaultHostName" -o tsv)
          echo "API_URL=https://$url/api/upload" >> $GITHUB_ENV
          echo "::notice::Upload Function API URL: https://$url/api/upload"

      - name: "Get and Mask SWA Token"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            token=$(az staticwebapp secrets list -n frontend-transcriber | jq -r '.properties.apiKey')
            echo "::add-mask::$token"
            echo "SWA_TOKEN=$token" >> $GITHUB_ENV

      - name: Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "frontend"
          app_build_command: npm run build
        env:
          REACT_APP_API_URL: ${{ env.API_URL }}

      - name: Get frontend static web app hostname
        id: get-frontend-host
        run: |
          hostname=$(az staticwebapp show \
            --name frontend-transcriber \
            --resource-group rg-transcriber \
            --query "defaultHostname" -o tsv)
          echo "FRONTEND_HOSTNAME=https://$hostname" >> $GITHUB_ENV
          echo "::notice::Frontend available at https://$hostname"

      - name: Add frontend to CORS
        run: |
          az functionapp cors add \
            --name upload-transcriber \
            --resource-group rg-transcriber \
            --allowed-origins ${{ env.FRONTEND_HOSTNAME }}
